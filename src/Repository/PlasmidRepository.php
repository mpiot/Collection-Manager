<?php

/*
 * Copyright 2016-2018 Mathieu Piot.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace App\Repository;

use App\Entity\Group;
use App\Entity\User;

/**
 * PlasmidRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PlasmidRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllForUser(User $user)
    {
        $query = $this->createQueryBuilder('plasmid')
            ->leftJoin('plasmid.group', 'g')
            ->leftJoin('g.members', 'members')
            ->where('members = :user')
                ->setParameter('user', $user)
            ->getQuery();

        return $query->getResult();
    }

    public function findOneWithAll($id)
    {
        $query = $this->createQueryBuilder('plasmid')
            ->leftJoin('plasmid.strainPlasmids', 'strainPlasmids')
                ->addSelect('strainPlasmids')
            ->leftJoin('strainPlasmids.strain', 'strain')
                ->addSelect('strain')
            ->leftJoin('strain.group', 'g')
                ->addSelect('g')
            ->leftJoin('g.members', 'members')
                ->addSelect('members')
            ->leftJoin('plasmid.primers', 'primers')
                ->addSelect('primers')
            ->where('plasmid.id = :id')
                ->setParameter('id', $id)
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    public function findOneByGroupAndNameWithFile(Group $group, $autoName)
    {
        $query = $this->createQueryBuilder('plasmid')
            ->leftJoin('plasmid.genBankFile', 'genBankFile')
            ->where('plasmid.group = :group')
            ->andWhere('plasmid.autoName = :autoName')
            ->setParameters([
                'group' => $group,
                'autoName' => $autoName,
            ])
            ->getQuery()
        ;

        return $query->getOneOrNullResult();
    }
}
