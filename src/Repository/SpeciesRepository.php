<?php

/*
 * Copyright 2016-2018 Mathieu Piot.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace App\Repository;

/**
 * SpeciesRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpeciesRepository extends \Doctrine\ORM\EntityRepository
{
    public function createSearchQueryBuilder($entityAlias)
    {
        $qb = $this->createQueryBuilder($entityAlias);

        $qb->select($entityAlias, 's')
            ->leftJoin($entityAlias.'.genus', 's')
        ;

        return $qb;
    }

    public function findOneWithGenus($slug)
    {
        $query = $this->createQueryBuilder('species')
            ->leftJoin('species.genus', 'genus')
                ->addSelect('genus')
            ->where('species.slug = :slug')
            ->setParameter('slug', $slug)
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    public function findOneWithGenusAndSynonyms($slug)
    {
        $query = $this->createQueryBuilder('species')
            ->leftJoin('species.genus', 'genus')
                ->addSelect('genus')
            ->leftJoin('species.synonyms', 'synonyms')
                ->addSelect('synonyms')
            ->where('species.slug = :slug')
                ->setParameter('slug', $slug)
            ->getQuery();

        return $query->getOneOrNullResult();
    }
}
