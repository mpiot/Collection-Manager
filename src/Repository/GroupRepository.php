<?php

/*
 * Copyright 2016-2018 Mathieu Piot.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace App\Repository;

use App\Entity\User;

/**
 * GroupRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GroupRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllWithMembers()
    {
        $query = $this->createQueryBuilder('g')
            ->leftJoin('g.administrators', 'administrators')
                ->addSelect('administrators')
            ->leftJoin('g.members', 'members')
                ->addSelect('members')
            ->orderBy('g.name', 'ASC')
            ->getQuery();

        return $query->getResult();
    }

    public function findOneWithMembers($slug)
    {
        $query = $this->createQueryBuilder('g')
            ->leftJoin('g.administrators', 'administrators')
                ->addSelect('administrators')
                    ->orderBy('administrators.firstName', 'ASC')
                    ->addOrderBy('administrators.lastName', 'ASC')
            ->leftJoin('g.members', 'members')
                ->addSelect('members')
                    ->orderBy('members.firstName', 'ASC')
                    ->addOrderBy('members.lastName', 'ASC')
            ->where('g.slug = :slug')
                ->setParameter('slug', $slug)
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    public function findAllForUser(User $user)
    {
        $query = $this->createQueryBuilder('g')
            ->leftJoin('g.members', 'members')
            ->leftJoin('g.administrators', 'administrators')
                ->addSelect('administrators')
            ->where('members = :user')
                ->setParameter('user', $user)
            ->orderBy('g.name', 'ASC')
            ->getQuery();

        return $query->getResult();
    }
}
